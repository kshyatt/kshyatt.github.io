<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Katharine Hyatt</title>
    <link>https://kshyatt.github.io/post/</link>
    <description>Recent content in Posts on Katharine Hyatt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://kshyatt.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making a first Julia pull request</title>
      <link>https://kshyatt.github.io/post/firstjuliapr/</link>
      <pubDate>Thu, 31 Jan 2019 13:39:26 -0500</pubDate>
      
      <guid>https://kshyatt.github.io/post/firstjuliapr/</guid>
      <description>In this post I&amp;rsquo;m going to go through my step-by-step process of finding some code in base Julia which is not covered by tests, adding tests which do cover it, checking to make sure the tests pass, and finally opening a pull request to have my changes merged in to Julia itself. We&amp;rsquo;ll be working off commit 0b0a394b3e7741d38f00dbb29895b6ba6a7d0767 if you want to follow along. I do almost all my development on macOS and Linux, so some of the shell commands will be a little different if you&amp;rsquo;re on Windows.</description>
    </item>
    
    <item>
      <title>Running Cluster Jobs Remotely </title>
      <link>https://kshyatt.github.io/post/sshcluster/</link>
      <pubDate>Thu, 31 Jan 2019 11:27:44 -0500</pubDate>
      
      <guid>https://kshyatt.github.io/post/sshcluster/</guid>
      <description>A Journey Through Laziness Quite often, I&amp;rsquo;m working at my desktop in my campus office. The compute cluster on campus does not allow me to SSH directly to nodes or to spawn jobs, so usually you SSH into the head node and queue the jobs (which may be julia jobs, if I want to run some fancy parallel Julia code).
This is kind of a pain, so I tried out using ClusterManagers.</description>
    </item>
    
  </channel>
</rss>